package types

import "time"

// BuildAddOrganization  is a struct
// generated by "schematyper -o types/RequestType_BuildAddOrganization.go --package=types --ptr-for-omit BuildAddOrganization.json" -- DO NOT EDIT
type BuildAddOrganization struct {
	OrganizationID UUID `json:"organization_id"`
	Role           Role `json:"role"`
}

// BuildAddUser  is a struct
// generated by "schematyper -o types/RequestType_BuildAddUser.go --package=types --ptr-for-omit BuildAddUser.json" -- DO NOT EDIT
type BuildAddUser struct {
	Email  EmailAddress `json:"email,omitempty"`
	Role   Role         `json:"role"`
	UserID UUID         `json:"user_id,omitempty"`
}

// BuildCreateDevice  is a struct
// generated by "schematyper -o types/RequestType_BuildCreateDevices.go --package=types --ptr-for-omit BuildCreateDevices.json" -- DO NOT EDIT
type BuildCreateDevice struct {
	AssetTag     interface{}             `json:"asset_tag,omitempty"`
	ID           UUID                    `json:"id,omitempty"`
	Links        []Link                  `json:"links,omitempty"`
	SerialNumber DeviceSerialNumber      `json:"serial_number,omitempty"`
	Sku          MojoStandardPlaceholder `json:"sku"`
}

// BuildCreateDevices  is a slice of BuildCreateDevice
type BuildCreateDevices []BuildCreateDevice

// Admin  is a struct
// generated by "schematyper -o types/RequestType_BuildCreate.go --package=types --ptr-for-omit BuildCreate.json" -- DO NOT EDIT
type Admin struct {
	Email EmailAddress `json:"email,omitempty"`
}

// BuildCreate is a struct
type BuildCreate struct {
	Admins      []Admin                 `json:"admins,omitempty"`
	Description NonEmptyString          `json:"description,omitempty"`
	Name        MojoStandardPlaceholder `json:"name"`
	Started     time.Time               `json:"started,omitempty"`
}

// BuildUpdate  is a struct
// generated by "schematyper -o types/RequestType_BuildUpdate.go --package=types --ptr-for-omit BuildUpdate.json" -- DO NOT EDIT
type BuildUpdate struct {
	Completed   interface{}             `json:"completed,omitempty"`
	Description interface{}             `json:"description,omitempty"`
	Name        MojoStandardPlaceholder `json:"name,omitempty"`
	Started     interface{}             `json:"started,omitempty"`
}

// DatacenterCreate is a struct
// generated by "schematyper -o types/RequestType_DatacenterCreate.go --package=types --ptr-for-omit DatacenterCreate.json" -- DO NOT EDIT
type DatacenterCreate struct {
	Location   NonEmptyString `json:"location"`
	Region     NonEmptyString `json:"region"`
	Vendor     NonEmptyString `json:"vendor"`
	VendorName NonEmptyString `json:"vendor_name,omitempty"`
}

// DatacenterUpdate is a struct
// generated by "schematyper -o types/RequestType_DatacenterUpdate.go --package=types --ptr-for-omit DatacenterUpdate.json" -- DO NOT EDIT
type DatacenterUpdate struct {
	Location   NonEmptyString `json:"location,omitempty"`
	Region     NonEmptyString `json:"region,omitempty"`
	Vendor     NonEmptyString `json:"vendor,omitempty"`
	VendorName NonEmptyString `json:"vendor_name,omitempty"`
}

// DeviceLinks is a struct
// generated by "schematyper -o types/RequestType_DeviceLinks.go --package=types --ptr-for-omit DeviceLinks.json" -- DO NOT EDIT
type DeviceLinks struct {
	Links []Link `json:"links"`
}

// CpusItem is a map of strings to data
// generated by "schematyper -o RequestType_DeviceReport.go --package=types --ptr-for-omit DeviceReport.json" -- DO NOT EDIT
type CpusItem map[string]interface{}

// DeviceReport is a struct of the contents of a posted device report from
// relays and reporters
type DeviceReport struct {
	BiosVersion  string               `json:"bios_version"`
	Cpus         []CpusItem           `json:"cpus,omitempty"`
	DeviceType   string               `json:"device_type,omitempty"`
	Dimms        []Dimm               `json:"dimms,omitempty"`
	Disks        map[string]Disk      `json:"disks,omitempty"`
	Interfaces   map[string]Interface `json:"interfaces,omitempty"`
	Links        []Link               `json:"links,omitempty"`
	Os           *Os                  `json:"os,omitempty"`
	ProductName  string               `json:"product_name"`
	Relay        *Relay               `json:"relay,omitempty"`
	SerialNumber DeviceSerialNumber   `json:"serial_number"`
	Sku          string               `json:"sku"`
	SystemUUID   UUID                 `json:"system_uuid"`
	Temp         *Temp                `json:"temp,omitempty"`
	UptimeSince  string               `json:"uptime_since,omitempty"`
}

// Dimm is a struct of memory information
type Dimm struct {
	MemoryLocator      string      `json:"memory-locator"`
	MemorySerialNumber interface{} `json:"memory-serial-number,omitempty"`
	MemorySize         interface{} `json:"memory-size,omitempty"`
}

// Disk is a struct of disk information
type Disk struct {
	BlockSz   int             `json:"block_sz,omitempty"`
	DriveType string          `json:"drive_type,omitempty"`
	Enclosure IntOrStringyInt `json:"enclosure,omitempty"`
	Firmware  string          `json:"firmware,omitempty"`
	Hba       IntOrStringyInt `json:"hba,omitempty"`
	Health    string          `json:"health,omitempty"`
	Model     string          `json:"model,omitempty"`
	Size      int             `json:"size,omitempty"`
	Slot      IntOrStringyInt `json:"slot,omitempty"`
	Temp      IntOrStringyInt `json:"temp,omitempty"`
	Transport string          `json:"transport,omitempty"`
	Vendor    string          `json:"vendor,omitempty"`
}

// DiskSerialNumber is a string
type DiskSerialNumber string

// Interface is a struct of network interface information
type Interface struct {
	Ipaddr  interface{} `json:"ipaddr,omitempty"`
	Mac     Macaddr     `json:"mac"`
	Mtu     interface{} `json:"mtu,omitempty"`
	PeerMac interface{} `json:"peer_mac,omitempty"`
	Product string      `json:"product"`
	State   interface{} `json:"state,omitempty"`
	Vendor  string      `json:"vendor"`
}

// Os is a struct of OS inforamtion
type Os struct {
	Hostname string `json:"hostname"`
}

// Temp is a struct of temperature data
type Temp struct {
	CPU0    IntOrStringyInt `json:"cpu0"`
	CPU1    IntOrStringyInt `json:"cpu1"`
	Exhaust IntOrStringyInt `json:"exhaust,omitempty"`
	Inlet   IntOrStringyInt `json:"inlet,omitempty"`
}

// HardwareProductCreate is a struct
// generated by "schematyper -o types/RequestType_HardwareProductCreate.go --package=types --ptr-for-omit HardwareProductCreate.json" -- DO NOT EDIT
type HardwareProductCreate struct {
	Alias             MojoStandardPlaceholder `json:"alias,omitempty"`
	BiosFirmware      string                  `json:"bios_firmware,omitempty"`
	CPUNum            int                     `json:"cpu_num,omitempty"`
	CPUType           string                  `json:"cpu_type,omitempty"`
	DimmsNum          int                     `json:"dimms_num,omitempty"`
	GenerationName    NonEmptyString          `json:"generation_name,omitempty"`
	HardwareVendorID  UUID                    `json:"hardware_vendor_id,omitempty"`
	HbaFirmware       interface{}             `json:"hba_firmware,omitempty"`
	LegacyProductName interface{}             `json:"legacy_product_name,omitempty"`
	Name              MojoStandardPlaceholder `json:"name,omitempty"`
	NicsNum           int                     `json:"nics_num,omitempty"`
	NvmeSsdNum        int                     `json:"nvme_ssd_num,omitempty"`
	NvmeSsdSize       interface{}             `json:"nvme_ssd_size,omitempty"`
	NvmeSsdSlots      interface{}             `json:"nvme_ssd_slots,omitempty"`
	Prefix            interface{}             `json:"prefix,omitempty"`
	PsuTotal          int                     `json:"psu_total,omitempty"`
	Purpose           string                  `json:"purpose,omitempty"`
	RAMTotal          int                     `json:"ram_total,omitempty"`
	RackUnitSize      PositiveInteger         `json:"rack_unit_size,omitempty"`
	RaidLunNum        int                     `json:"raid_lun_num,omitempty"`
	SasHddNum         int                     `json:"sas_hdd_num,omitempty"`
	SasHddSize        interface{}             `json:"sas_hdd_size,omitempty"`
	SasHddSlots       interface{}             `json:"sas_hdd_slots,omitempty"`
	SasSsdNum         int                     `json:"sas_ssd_num,omitempty"`
	SasSsdSize        interface{}             `json:"sas_ssd_size,omitempty"`
	SasSsdSlots       interface{}             `json:"sas_ssd_slots,omitempty"`
	SataHddNum        int                     `json:"sata_hdd_num,omitempty"`
	SataHddSize       interface{}             `json:"sata_hdd_size,omitempty"`
	SataHddSlots      interface{}             `json:"sata_hdd_slots,omitempty"`
	SataSsdNum        int                     `json:"sata_ssd_num,omitempty"`
	SataSsdSize       interface{}             `json:"sata_ssd_size,omitempty"`
	SataSsdSlots      interface{}             `json:"sata_ssd_slots,omitempty"`
	Sku               MojoStandardPlaceholder `json:"sku,omitempty"`
	Specification     interface{}             `json:"specification,omitempty"`
	UsbNum            int                     `json:"usb_num,omitempty"`
	ValidationPlanID  UUID                    `json:"validation_plan_id,omitempty"`
}

// Chassis is a struct of Chassis data
// generated by "schematyper -o types/RequestType_HardwareProductSpecification.go --package=types --ptr-for-omit HardwareProductSpecification.json" -- DO NOT EDIT
type Chassis struct {
	Memory *Memory `json:"memory,omitempty"`
}

// HardwareProductSpecification is the structure of the
// hardware_product.specification database column
type HardwareProductSpecification struct {
	Chassis  *Chassis                `json:"chassis,omitempty"`
	DiskSize map[string]DiskSizeItem `json:"disk_size,omitempty"`
}

// Memory is a struct of Memory inforamtion
type Memory struct {
	Dimms []Dimm `json:"dimms,omitempty"`
}

// HardwareProductUpdate is a struct
// generated by "schematyper -o types/RequestType_HardwareProductUpdate.go --package=types --ptr-for-omit HardwareProductUpdate.json" -- DO NOT EDIT
type HardwareProductUpdate struct {
	Alias             MojoStandardPlaceholder `json:"alias,omitempty"`
	BiosFirmware      string                  `json:"bios_firmware,omitempty"`
	CPUNum            int                     `json:"cpu_num,omitempty"`
	CPUType           string                  `json:"cpu_type,omitempty"`
	DimmsNum          int                     `json:"dimms_num,omitempty"`
	GenerationName    NonEmptyString          `json:"generation_name,omitempty"`
	HardwareVendorID  UUID                    `json:"hardware_vendor_id,omitempty"`
	HbaFirmware       interface{}             `json:"hba_firmware,omitempty"`
	LegacyProductName interface{}             `json:"legacy_product_name,omitempty"`
	Name              MojoStandardPlaceholder `json:"name,omitempty"`
	NicsNum           int                     `json:"nics_num,omitempty"`
	NvmeSsdNum        int                     `json:"nvme_ssd_num,omitempty"`
	NvmeSsdSize       interface{}             `json:"nvme_ssd_size,omitempty"`
	NvmeSsdSlots      interface{}             `json:"nvme_ssd_slots,omitempty"`
	Prefix            interface{}             `json:"prefix,omitempty"`
	PsuTotal          int                     `json:"psu_total,omitempty"`
	Purpose           string                  `json:"purpose,omitempty"`
	RAMTotal          int                     `json:"ram_total,omitempty"`
	RackUnitSize      PositiveInteger         `json:"rack_unit_size,omitempty"`
	RaidLunNum        int                     `json:"raid_lun_num,omitempty"`
	SasHddNum         int                     `json:"sas_hdd_num,omitempty"`
	SasHddSize        interface{}             `json:"sas_hdd_size,omitempty"`
	SasHddSlots       interface{}             `json:"sas_hdd_slots,omitempty"`
	SasSsdNum         int                     `json:"sas_ssd_num,omitempty"`
	SasSsdSize        interface{}             `json:"sas_ssd_size,omitempty"`
	SasSsdSlots       interface{}             `json:"sas_ssd_slots,omitempty"`
	SataHddNum        int                     `json:"sata_hdd_num,omitempty"`
	SataHddSize       interface{}             `json:"sata_hdd_size,omitempty"`
	SataHddSlots      interface{}             `json:"sata_hdd_slots,omitempty"`
	SataSsdNum        int                     `json:"sata_ssd_num,omitempty"`
	SataSsdSize       interface{}             `json:"sata_ssd_size,omitempty"`
	SataSsdSlots      interface{}             `json:"sata_ssd_slots,omitempty"`
	Sku               MojoStandardPlaceholder `json:"sku,omitempty"`
	Specification     interface{}             `json:"specification,omitempty"`
	UsbNum            int                     `json:"usb_num,omitempty"`
	ValidationPlanID  UUID                    `json:"validation_plan_id,omitempty"`
}

// Login is a struct
// generated by "schematyper -o types/RequestType_Login.go --package=types --ptr-for-omit Login.json" -- DO NOT EDIT
type Login struct {
	Email      EmailAddress   `json:"email,omitempty"`
	Password   NonEmptyString `json:"password"`
	SetSession bool           `json:"set_session,omitempty"`
	// UserID     UUID           `json:"user_id,omitempty"`
}

// NewUser is a struct
// generated by "schematyper -o types/RequestType_NewUser.go --package=types --ptr-for-omit NewUser.json" -- DO NOT EDIT
type NewUser struct {
	Email    EmailAddress   `json:"email"`
	IsAdmin  bool           `json:"is_admin,omitempty"`
	Name     NonEmptyString `json:"name"`
	Password NonEmptyString `json:"password,omitempty"`
}

// NewUserTokenRequest is a struct
// generated by "schematyper -o types/RequestType_NewUserToken.go --package=types --ptr-for-omit NewUserToken.json" -- DO NOT EDIT
type NewUserTokenRequest struct {
	Name string `json:"name"`
}

// OrganizationAddUser is a struct
// generated by "schematyper -o types/RequestType_OrganizationAddUser.go --package=types --ptr-for-omit OrganizationAddUser.json" -- DO NOT EDIT
type OrganizationAddUser struct {
	Email  EmailAddress `json:"email,omitempty"`
	Role   Role         `json:"role"`
	UserID UUID         `json:"user_id,omitempty"`
}

// OrganizationCreate is a struct
// generated by "schematyper -o types/RequestType_OrganizationCreate.go --package=types --ptr-for-omit OrganizationCreate.json" -- DO NOT EDIT
type OrganizationCreate struct {
	Admins      []Admin                 `json:"admins"`
	Description NonEmptyString          `json:"description,omitempty"`
	Name        MojoStandardPlaceholder `json:"name"`
}

// OrganizationUpdate  is a struct
// generated by "schematyper -o types/RequestType_OrganizationUpdate.go --package=types --ptr-for-omit OrganizationUpdate.json" -- DO NOT EDIT
type OrganizationUpdate struct {
	Description interface{}             `json:"description,omitempty"`
	Name        MojoStandardPlaceholder `json:"name,omitempty"`
}

// RegisterRelay is a struct
// generated by "schematyper -o types/RequestType_RegisterRelay.go --package=types --ptr-for-omit RegisterRelay.json" -- DO NOT EDIT
type RegisterRelay struct {
	Ipaddr  string             `json:"ipaddr,omitempty"`
	Name    NonEmptyString     `json:"name,omitempty"`
	SSHPort NonNegativeInteger `json:"ssh_port,omitempty"`
	Serial  RelaySerialNumber  `json:"serial"`
	Version string             `json:"version,omitempty"`
}

// UpdateUser is a struct
// generated by "schematyper -o types/RequestType_UpdateUser.go --package=types --ptr-for-omit UpdateUser.json" -- DO NOT EDIT
type UpdateUser struct {
	Email   EmailAddress   `json:"email,omitempty"`
	IsAdmin bool           `json:"is_admin,omitempty"`
	Name    NonEmptyString `json:"name,omitempty"`
}

// RackRoleCreate is a struct
type RackRoleCreate struct {
	Name     MojoStandardPlaceholder `json:"name"`
	RackSize PositiveInteger         `json:"rack_size"`
}

// RackRoleUpdate is a struct
type RackRoleUpdate struct {
	Name     MojoStandardPlaceholder `json:"name,omitempty"`
	RackSize PositiveInteger         `json:"rack_size,omitempty"`
}

// RackUpdate is a struct
type RackUpdate struct {
	AssetTag         interface{}            `json:"asset_tag,omitempty"`
	BuildID          UUID                   `json:"build_id,omitempty"`
	DatacenterRoomID UUID                   `json:"datacenter_room_id,omitempty"`
	Name             MojoRelaxedPlaceholder `json:"name,omitempty"`
	Phase            DevicePhase            `json:"phase,omitempty"`
	RackRoleID       UUID                   `json:"rack_role_id,omitempty"`
	SerialNumber     interface{}            `json:"serial_number,omitempty"`
}

// RackCreate is a struct
type RackCreate struct {
	AssetTag         NonEmptyString         `json:"asset_tag,omitempty"`
	BuildID          UUID                   `json:"build_id"`
	DatacenterRoomID UUID                   `json:"datacenter_room_id"`
	Name             MojoRelaxedPlaceholder `json:"name"`
	Phase            DevicePhase            `json:"phase,omitempty"`
	RackRoleID       UUID                   `json:"rack_role_id"`
	SerialNumber     NonEmptyString         `json:"serial_number,omitempty"`
}

// RackLayoutUpdate is a struct
type RackLayoutUpdate struct {
	HardwareProductID UUID            `json:"hardware_product_id,omitempty"`
	RackID            interface{}     `json:"rack_id,omitempty"`
	RackUnitStart     PositiveInteger `json:"rack_unit_start,omitempty"`
}

// RackAssignmentDelete is a struct
type RackAssignmentDelete struct {
	DeviceID      UUID            `json:"device_id"`
	RackUnitStart PositiveInteger `json:"rack_unit_start"`
}

// RackAssignmentDeletes is slice of RackAssignmentDelete structs
type RackAssignmentDeletes []RackAssignmentDelete

// RackAssignmentUpdate is a struct
type RackAssignmentUpdate struct {
	DeviceAssetTag     interface{}        `json:"device_asset_tag,omitempty"`
	DeviceSerialNumber DeviceSerialNumber `json:"device_serial_number,omitempty"`
	RackUnitStart      PositiveInteger    `json:"rack_unit_start"`
}

// RackAssignmentUpdates is a slice of RackAssignmentUpdate structs
type RackAssignmentUpdates []RackAssignmentUpdate

// RackPhase is a struct
type RackPhase struct {
	Phase DevicePhase `json:"phase"`
}

// RackLinks is a struct
type RackLinks struct {
	Links []Link `json:"links,omitempty"`
}

// DatacenterRoomCreate is a struct
type DatacenterRoomCreate struct {
	Alias        MojoStandardPlaceholder `json:"alias"`
	Az           NonEmptyString          `json:"az"`
	DatacenterID UUID                    `json:"datacenter_id"`
	VendorName   MojoRelaxedPlaceholder  `json:"vendor_name"`
}

// DatacenterRoomUpdate is a struct
type DatacenterRoomUpdate struct {
	Alias        MojoStandardPlaceholder `json:"alias,omitempty"`
	Az           NonEmptyString          `json:"az,omitempty"`
	DatacenterID UUID                    `json:"datacenter_id,omitempty"`
	VendorName   MojoRelaxedPlaceholder  `json:"vendor_name,omitempty"`
}
